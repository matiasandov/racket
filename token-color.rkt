#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 555 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"Token highlighter"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"Mat\303\255as Mendez"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"Fernanda Nava"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"Eduardo Galindo"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"13/05/2021"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"car: saca el primero de la lista"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"1. funcion escribir en html"
0 0 17 29 1 #"\n"
0 0 17 3 69
(5
 #"2. funcion para obtener el nombre archivo y agregar extension de html"
) 0 0 17 29 1 #"\n"
0 0 17 3 28 #"3. funcion para leer archivo"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"4. funcion para clasificar tokens y devuelve tag de html"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 12 #"racket/trace"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 12 #"racket/match"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 4 #"json"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 4 #"main"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"separator"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"loop"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (["
0 0 14 3 6 #"string"
0 0 25 3 2 #" ("
0 0 14 3 12 #"file->string"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 10 #"found-list"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 5 #"token"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 19 #"#px\"^[{}:,\\\\[\\\\]]+\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"punctuation\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 19 #"#px\"^[{}:,\\\\[\\\\]]+\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 30 #"#rx\"^(\\\"[-a-zA-Z0-9:,. ]+\\\"):\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"object-key\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 30 #"#px\"^(\\\"[-a-zA-Z0-9:,. ]+\\\"):\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 29 #"#px\"^(\\\"[-a-zA-Z0-9:,. ]+\\\")\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"string\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 29 #"#px\"^(\\\"[-a-zA-Z0-9:,. ]+\\\")\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 18 #"#px\"^(\\\"[0-9]+\\\")\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"int\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 18 #"#px\"^(\\\"[0-9]+\\\")\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 10 #"#px\"^\\\\s+\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"space\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 10 #"#px\"^\\\\s+\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 23 #"#px\"^false|^true|^null\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #")("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"boolean\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 23 #"#px\"^false|^true|^null\""
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"           )])"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 5 #"token"
0 0 25 3 4 #")))("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 10 #"found-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"token"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 14 3 10 #"found-list"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"           )))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"write-file"
0 0 25 3 1 #" "
0 0 14 3 13 #"out-file-path"
0 0 25 3 1 #" "
0 0 14 3 4 #"data"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 21 #"call-with-output-file"
0 0 25 3 1 #" "
0 0 14 3 13 #"out-file-path"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 24 3 8 #"#:exists"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"truncate"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"<!DOCTYPE html>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"<html>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"<head>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"<title>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"Json Codee\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"</title>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 47 #"\"<link rel=\\\"stylesheet\\\" href=\\\"tokens.css\\\">\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"</head>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"<body>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"<pre>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 17 3 10 #";(let loop"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 13 #";([lst data])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 6 #";(cond"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 20 #";[(not (empty? lst))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 4 #"data"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"<span class=\\\"\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"\\\">\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"</span>\""
0 0 25 3 2 #" )"
0 0 14 3 3 #"out"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 17 3 25 #";(displayln (car lst)out)"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 17 3 20 #";(loop (cdr lst))]))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"</pre>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"</body>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"</html>\""
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"split-file-extension"
0 0 25 3 1 #" "
0 0 14 3 12 #"input-string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 19 3 45 #"\" Extract only the name part of a file name \""
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 63
#"; Define two groups: one for the name and one for the extension"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 76
(6
 #"; Store the results of the regular expression (a list) in variable 'm"
 #"atches'"
) 0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (["
0 0 14 3 7 #"matches"
0 0 25 3 2 #" ("
0 0 14 3 12 #"regexp-match"
0 0 25 3 1 #" "
0 0 19 3 28 #"#px\"^([\\\\w-]+)(\\\\.\\\\w{1,4})\""
0 0 25 3 1 #" "
0 0 14 3 12 #"input-string"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 27 #"; Take only the first group"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 7 #"matches"
0 0 25 3 1 #")"
0 0 19 3 7 #"\".html\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"read-file-string"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"file->string"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 62
#";(jsexpr->string(call-with-input-file in-file-path read-json))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"main"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"out-file-path"
0 0 25 3 2 #" ("
0 0 14 3 20 #"split-file-extension"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"data"
0 0 25 3 2 #" ("
0 0 14 3 9 #"separator"
0 0 25 3 1 #" "
0 0 14 3 12 #"in-file-path"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"write-file"
0 0 25 3 1 #" "
0 0 14 3 13 #"out-file-path"
0 0 25 3 1 #" "
0 0 14 3 4 #"data"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
